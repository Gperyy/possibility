import shutil
from pathlib import Path

import requests

import streamlit as st
from streamlit_lottie import st_lottie
from streamlit_option_menu import option_menu
from coin import CoinTossSimulation
from dice import DiceRollerSimulation


def move_font_files():
    STREAMLIT_STATIC_PATH = Path(st.__path__[0]) / "static"
    CSS_PATH = STREAMLIT_STATIC_PATH / "assets/fonts/"
    if not CSS_PATH.is_dir():
        CSS_PATH.mkdir()

    css_file = CSS_PATH / "Monserrat"
    if not css_file.exists():
        shutil.copy("layout/Monserrat", css_file)


st.markdown(
    """
    <style>
@font-face {
font-family: 'Montserrat';
font-style: normal;
font-weight: normal;
src:url(https://fonts.google.com/specimen/Montserrat?query=mont)
}
html, body, [class*="css"] {
font-family: 'Montserrat'
}
</style>
""",
    unsafe_allow_html=True,
)

# option menu
selected = option_menu(
    menu_title="Main Menu",
    options=["Olasƒ±lƒ±k D√ºnyasƒ±", "Temel Olasƒ±lƒ±k", "Yazƒ±/Tura", "Zar Sim√ºlasyonu", "Monty Hall Oyunu", "ƒ∞leti≈üim"],
    default_index=0,
    icons=["book", "hand-index", "coin", "dice-3", "door-open", "envelope"],
    orientation="horizontal",
)
if selected == "Olasƒ±lƒ±k D√ºnyasƒ±":
    # alt baslik
    st.subheader("Olasƒ±lƒ±k Kuramƒ± Nasƒ±l Ortaya √áƒ±kmƒ±≈ütƒ±r?üßÆ ")

    # text
    st.write("Olasƒ±lƒ±k kuramƒ±, 17. y√ºzyƒ±lƒ±n ortalarƒ±ndan itibaren geli≈ümeye ba≈ülamƒ±≈ütƒ±r. √ñncelikle Fransƒ±z matematik√ßi "
             "Blaise Pascal ve Pierre de Fermat tarafƒ±ndan olasƒ±lƒ±k kuramƒ±nƒ±n temelleri atƒ±lmƒ±≈ütƒ±r. Pascal ve Fermat, "
             "bir√ßok matematik problemi √ß√∂zmek i√ßin olasƒ±lƒ±k kuramƒ±nƒ± kullanmaya ba≈ülamƒ±≈ülardƒ±r. √ñrneƒüin, Fermat, "
             "bir k√¢ƒüƒ±t oyununda kazanma olasƒ±lƒ±ƒüƒ±nƒ± hesaplamak i√ßin olasƒ±lƒ±k kuramƒ±nƒ± kullanmƒ±≈ütƒ±r.")
    st.write("I. y√ºzyƒ±lƒ±n sonlarƒ±na doƒüru, olasƒ±lƒ±k kuramƒ±, √∂zellikle Fransa'da, bir√ßok matematik√ßi tarafƒ±ndan daha "
             "ayrƒ±ntƒ±lƒ± olarak incelenmeye ba≈ülandƒ±. Bu √ßalƒ±≈ümalar, olasƒ±lƒ±k kuramƒ±nƒ±n daha geni≈ü bir alana "
             "uygulanabileceƒüini g√∂stermi≈ütir. √ñrneƒüin, 18. y√ºzyƒ±lda ƒ∞sve√ßli matematik√ßi Anders Johann Lindstr√∂m, "
             "olasƒ±lƒ±k kuramƒ±nƒ±n tahmin ve istatistik alanlarƒ±nda kullanƒ±labileceƒüini g√∂stermi≈ütir.")
    st.write("II. y√ºzyƒ±lda, ƒ∞ngiliz matematik√ßi Thomas Bayes, olasƒ±lƒ±k kuramƒ±nƒ±ntemelini olu≈üturan Bayes Teoremi'ni "
             "ortaya attƒ±. Bu teoremi, olaylar arasƒ±ndaki ili≈ükileri ve olasƒ±lƒ±klarƒ± modellemek i√ßin kullanƒ±lƒ±r. "
             "20. "
             "y√ºzyƒ±lƒ±n ba≈ülarƒ±nda, olasƒ±lƒ±k kuramƒ± ve istatistik alanlarƒ±ndaki √ßalƒ±≈ümalar hƒ±zlandƒ± ve bug√ºn "
             "olasƒ±lƒ±k "
             "kuramƒ± ve istatistik, bir√ßok alanda kullanƒ±lmaktadƒ±r.")


    def load_lottieurl(url: str) -> object:
        r = requests.get(url)
        if r.status_code != 200:
            return None
        return r.json()


    # animasyon
    lottie_question = load_lottieurl("https://assets6.lottiefiles.com/packages/lf20_u7yrcwlk.json")
    st_lottie(
        lottie_question,
        speed=1,
        reverse=False,
        loop=True,
        quality="low",  # medium ; high
        height=150
    )
    st.write("Belirli bir olay A i√ßin olasƒ±lƒ±k P(A) 0 ile 1 arasƒ±nda deƒüi≈üen bir sayƒ± ile temsil edilir.Hi√ß olanaksƒ±z "
             "bir olay i√ßin olasƒ±lƒ±k 0 olur ve kesinlikle olacak bir olayƒ±n olasƒ±lƒ±ƒüƒ± 1 olur. Bazƒ± istatik√ßicler bu "
             "u√ßsal olasƒ±lƒ±k deƒüerlerinin sadece teorik olduƒüunu iddia etmektedirler √ß√ºnk√º kabul ettikleri olasƒ±lƒ±k "
             "a√ßƒ±klamasƒ± deneylemelerle limitte g√∂resel √ßoklukluk (relatif frekans) deƒüerine dayanƒ±r.Diƒüer Bayes-tipi, "
             "√∂zellikle, olasƒ±lƒ±k a√ßƒ±klamasƒ±na g√∂re bu u√ßsal olasƒ±lƒ±k deƒüerlerini s√ºbjektif olarak d√º≈ü√ºnmek ve "
             "olaylara bu deƒüeleri koymak imkan dahilindedir.")
if selected == "Temel Olasƒ±lƒ±k":
    st.markdown('**‚ÄúTHE WORLD IS AN UNCERTAIN PLACE‚Äù**')
    st.write("Bu b√∂l√ºm olasƒ±lƒ±k teorisinin temel kavramlarƒ±nƒ± tanƒ±tmak ama√ßlƒ±dƒ±r.")
    st.write("Yarƒ±nki hava durumu gibi sƒ±radan g√∂r√ºnen bir ≈üey hakkƒ±nda tahminlerde "
             "bulunmak ger√ßekten de zor bir i≈ütir. Modern zamanlarƒ±n en geli≈ümi≈ü bilgisayarlarƒ± ve modelleriyle bile "
             "meteoroloji uzmanlarƒ± yarƒ±n yaƒümur yaƒüƒ±p yaƒümayacaƒüƒ±nƒ± kesin olarak s√∂yleyemezler. Yapabilecekleri en "
             "iyi ≈üey, yarƒ±n yaƒümur yaƒüma olasƒ±lƒ±ƒüƒ±na ili≈ükin en iyi tahminlerini vermektir. √ñrneƒüin, meteoroloji "
             "uzmanlarƒ± yarƒ±n yaƒümur yaƒüacaƒüƒ±ndan olduk√ßa eminlerse, yaƒümur yaƒüma ihtimalinin %90 olduƒüunu "
             "s√∂yleyebilirler. Muhtemelen hayatƒ±nƒ±z boyunca bu t√ºr ifadeler duymu≈üsunuzdur, ancak yaƒümur olasƒ±lƒ±ƒüƒ±nƒ±n "
             "%90 olduƒüunu s√∂ylediklerinde bunun tam olarak ne anlama geldiƒüini hi√ß merak ettiniz mi? ")

    # animasyon
    def load_lottieurl(url: str) -> object:
        r = requests.get(url)
        if r.status_code != 200:
            return None
        return r.json()


    lottie_think = load_lottieurl("https://assets8.lottiefiles.com/packages/lf20_o18imdcr.json")
    st_lottie(
        lottie_think,
        speed=1,
        reverse=False,
        loop=True,
        quality="low",  # medium ; high
        height=350
    )
    st.subheader(':blue[≈ûans Oyunlarƒ±]')
    st.write("≈ûans olaylarƒ±nƒ±n mantƒ±ksal olarak tutarlƒ± bir ≈üekilde analiz edilmesini saƒülayan matematiksel temel, "
             "olasƒ±lƒ±k teorisi olarak bilinir. Bir olayƒ±n olasƒ±lƒ±ƒüƒ±, o olayƒ±n ger√ßekle≈ümesinin ne kadar muhtemel "
             "olduƒüunun sayƒ±sal bir g√∂stergesidir. Bu deƒüer her zaman 0 ve 1 aralƒ±ƒüƒ±ndadƒ±r; 0 imkansƒ±zlƒ±ƒüƒ±, "
             "1 ise g√ºveni ifade eder. ƒ∞ki potansiyel sonucu yazƒ± veya tura olan adil bir yazƒ± tura, olasƒ±lƒ±ksal bir "
             "deneyin klasik bir √∂rneƒüidir. Bu durumda yazƒ± tura atma olasƒ±lƒ±ƒüƒ± 50/50'ye e≈üittir. Ger√ßek bir yazƒ± "
             "tura atma k√ºmesinde tam olarak %50'den daha fazla ya da daha az tura gelebilir. Ancak, daha fazla yazƒ± "
             "tura atƒ±ldƒ±ƒüƒ±nda, uzun vadede tura gelme sƒ±klƒ±ƒüƒ± ka√ßƒ±nƒ±lmaz olarak %50'ye yakla≈üacaktƒ±r.Adil olmayan "
             "veya aƒüƒ±rlƒ±klƒ± bir madeni para i√ßin iki sonu√ß e≈üit olasƒ±lƒ±kta deƒüildir.Sonu√ßlara sayƒ±lar atarsak - "
             "√∂rneƒüin yazƒ± i√ßin 1, tura i√ßin 0 - o zaman rastgele deƒüi≈üken olarak bilinen matematiksel nesneyi "
             "yaratmƒ±≈ü oluruz.")
    st.subheader(':orange[Beklenti]')
    st.write("Rastgele bir deƒüi≈ükenin beklentisi, bu rastgele deƒüi≈ükenin daƒüƒ±lƒ±mƒ±nƒ±n merkezini yakalamaya √ßalƒ±≈üan bir "
             "sayƒ±dƒ±r. Verilen daƒüƒ±lƒ±mdan alƒ±nan bir√ßok baƒüƒ±msƒ±z √∂rneƒüin uzun d√∂nemli ortalamasƒ± olarak "
             "yorumlanabilir. Daha a√ßƒ±k bir ifadeyle, rastgele deƒüi≈ükenin desteƒüindeki t√ºm olasƒ± deƒüerlerin olasƒ±lƒ±k "
             "aƒüƒ±rlƒ±klƒ± toplamƒ± olarak tanƒ±mlanƒ±r,")
    st.latex("{E}[X] = \sum_{x \in \mathcal{\square}}xP(x)")
    st.subheader(':green[Varyans]')
    st.write("Beklenti bir merkezilik √∂l√ß√ºs√º saƒülarken, rastgele bir deƒüi≈ükenin varyansƒ± o rastgele deƒüi≈ükenin "
             "daƒüƒ±lƒ±mƒ±nƒ±n yayƒ±lƒ±mƒ±nƒ± √∂l√ßer. Varyans, rastgele deƒüi≈üken ile beklentisi arasƒ±ndaki karesel farkƒ±n "
             "ortalama deƒüeridir.")
    st.latex("{Var}(X) = {E}[(X -{E}[X])^2]")

if selected == "Yazƒ±/Tura":
    st.subheader("Yazƒ±/Tura Deneyleri ü™ô")
    st.write("Kƒ±sa cevaplar alabilmek i√ßin en iyi yollardan biri de madeni paralarƒ± kullanmaktƒ± fakat ilk "
             "olarak Lidyalƒ±lar tarafƒ±ndan M√ñ 10.y√ºzyƒ±lda kullanƒ±lmaya ba≈ülanmƒ±≈ütƒ±r. Zaten kullanƒ±lmaya ba≈üladƒ±ƒüƒ±nda "
             "da Tanrƒ±larƒ±n insanlar hakkƒ±nda karar verdiƒüi bir ara√ß olarak d√º≈ü√ºn√ºlmemi≈ütir. Dokuz y√ºzyƒ±l sonra ise "
             "Julius Caesar (Sezar) yazƒ± turayƒ± ba≈ülatmƒ±≈ütƒ±r. Romalƒ±larƒ±n paralarƒ±nƒ±n bir y√ºz√ºnde Sezar‚Äôƒ±n kafasƒ±nƒ±n "
             "resmi vardƒ± ve para havaya atƒ±ldƒ±ƒüƒ±nda T√ºrk√ße‚Äôde ba≈ü anlamƒ±na gelen head kƒ±smƒ± yani Sezar‚Äôƒ±n kafasƒ±nƒ±n "
             "olduƒüu kƒ±sƒ±m gelirse dileƒüin Tanrƒ± tarafƒ±ndan yerine getirileceƒüi veya bir konudaki haklƒ± tarafƒ±n kim "
             "olduƒüunu g√∂steriyordu. Kƒ±saca kazanmak i√ßin head kƒ±smƒ± gelmeliydi.")
    st.write("Paranƒ±n havada yakalandƒ±ƒüƒ± klasik yazƒ± tura oyununda yalnƒ±z iki olasƒ±lƒ±k vardƒ±r, para ya yazƒ± ya tura "
             "gelir. Yazƒ±nƒ±n ya da turanƒ±n art arda birka√ß defa gelmesi doƒüal kar≈üƒ±lanƒ±r ancak yazƒ± tura atƒ±lmaya "
             "devam edilirse, yazƒ±larƒ±n ya da turalarƒ±n oranƒ± gitgide %100'ye yakla≈üƒ±r.  Paranƒ±n havada yakalanmadƒ±ƒüƒ± "
             "yazƒ± tura oyununda yere d√º≈üen paranƒ±n dik gelmesi ihtimali √ßok d√º≈ü√ºkt√ºr. Bu nedenle yazƒ± ve tura "
             "oranlarƒ± uzun vadede yine %50'ye √ßok yakƒ±n olacaktƒ±r.")


    def load_lottieurl(url: str) -> object:
        r = requests.get(url)
        if r.status_code != 200:
            return None
        return r.json()


    lottie_question = load_lottieurl("https://assets2.lottiefiles.com/packages/lf20_1l9gpfir.json")
    st_lottie(
        lottie_question,
        speed=1,
        reverse=False,
        loop=True,
        quality="low",  # medium ; high
        height=300
    )

    num_tosses = st.number_input("**:orange[Ka√ß kez para atmak istersiniz? :coin:]**", format="%d", min_value=1,
                                 max_value=1000)
    sim = CoinTossSimulation(num_tosses)
    simulation_result = sim.run_simulation
    heads, tails = simulation_result[0], simulation_result[1]

    st.plotly_chart(sim.plot_result)

if selected == "Zar Sim√ºlasyonu":
    st.write("K√ºp, her bir y√ºz√ºnde i≈üaretler bulunan bir katƒ±dƒ±r. Y√ºzlerin hepsi genellikle aynƒ± ≈üekildedir, "
             "bu nedenle Platonik katƒ±lar ve Ar≈üimet ikilileri bariz se√ßeneklerdir. Zar, havaya atƒ±larak ve "
             "y√ºzlerinden birinin √ºzerinde durmasƒ± saƒülanarak yuvarlanabilir. Zar, bir√ßok ≈üans oyununda √ºzerine bahis "
             "oynanacak rastgele sayƒ±larƒ± se√ßmek i√ßin, tahta veya rol yapma oyunlarƒ±nda ise hareket edilecek kare "
             "sayƒ±sƒ±nƒ±, bir √ßatƒ±≈ümanƒ±n sonucunu vb. belirlemek i√ßin kullanƒ±lƒ±r. Madeni para, kalƒ±bƒ±n dejenere olmu≈ü 2 "
             "taraflƒ± bir √ße≈üidi olarak d√º≈ü√ºn√ºlebilir.")
    st.write("Mozart 1787 yƒ±lƒ±nda bir m√ºzikal kompozisyon zar oyunu i√ßin boyutlarƒ± ve talimatlarƒ± yazmƒ±≈ütƒ±r. Buradaki "
             "fikir, bir Minuet (Chuang) olu≈üturmak i√ßin √∂nceden hazƒ±rlanmƒ±≈ü m√ºzik √∂l√ß√ºlerini kesip yapƒ±≈ütƒ±rmaktƒ±r.")
    # video_file = open('/Users/peri/Desktop/ezgif-1-9f91e39007.mp4', 'rb')
    # video_bytes = video_file.read()
    # st.video(video_bytes)
    # st.markdown(":red[**_Video credit: Blanca Martinez & Joe Sparkes_**]")

    st.write('En yaygƒ±n zar t√ºr√º, kenarlarƒ±nda 1-6 sayƒ±larƒ± bulunan altƒ± y√ºzl√º bir zardƒ±r. Atƒ±lan zarƒ±n deƒüeri '
             '√ºst√ºndeki "nokta" sayƒ±sƒ± ile g√∂sterilir. Altƒ± y√ºzl√º bir zarda, kar≈üƒ±lƒ±klƒ± kenarlar, toplam her zaman '
             'yedi olacak ≈üekilde d√ºzenlenmi≈ütir. Bu, 1, 2 ve 3 sayƒ±larƒ±nƒ±n bir k√∂≈üenin etrafƒ±nda saat y√∂n√ºnde veya '
             'saat y√∂n√ºn√ºn tersine dizilebildiƒüi iki olasƒ± ayna g√∂r√ºnt√ºs√º d√ºzenlemesiyle sonu√ßlanƒ±r. Ticari zarlar '
             'aslƒ±nda her iki y√∂ne de sahip olabilir. Yukarƒ±daki √ßizimler, k√ºp√ºn merkezine doƒüru √º√ßl√º d√∂nme ekseni '
             'boyunca bakƒ±ldƒ±ƒüƒ±nda saat y√∂n√ºn√ºn tersine veya saat y√∂n√ºnde d√ºzenlemelere sahip 6 y√ºzl√º k√ºpleri '
             'g√∂stermektedir.')
    # animasyon

    def load_lottieurl(url: str) -> object:
        r = requests.get(url)
        if r.status_code != 200:
            return None
        return r.json()


    lottie_dice = load_lottieurl("https://assets6.lottiefiles.com/packages/lf20_Wy80jjKz4n.json")
    st_lottie(
        lottie_dice,
        speed=1,
        reverse=False,
        loop=True,
        quality="low",  # medium ; high
        height=200
    )

    num_rolls = st.number_input("**:orange[Ka√ß kaz zar atmak istiyorsunuz?üé≤]**", format="%d", min_value=1,
                                max_value=1000)
    dice_roller = DiceRollerSimulation(num_rolls)
    simulate_rolls = dice_roller.simulate_rolls
    dice_roller.simulate_rolls()
    st.plotly_chart(dice_roller.plot_results())

if selected == "Monty Hall Oyunu":
    st.write("Televizyon sunucusu Monty, Monty Hall bilmecesinde katƒ±lƒ±mcƒ±ya √º√ß kapƒ± sunar. Kapƒ±lardan biri araba "
             "gibi kazan√ßlƒ± bir √∂d√ºl√º saklarken, diƒüerleri ke√ßi gibi daha az arzu edilen bir √∂d√ºl√º saklar.Kendinizi "
             "g√∂sterideki bir akt√∂r olarak d√º≈ü√ºnmelisiniz. √ú√ß kapƒ±dan birini se√ßiyorsunuz. Monty √∂nce arkasƒ±nda "
             "ke√ßilerden birinin saklanacaƒüƒ± ba≈üka bir kapƒ±yƒ± a√ßar. ≈ûimdi geriye iki kapƒ± kalƒ±yor, bunlardan biri "
             "araba diƒüeri ke√ßi olabilir.Monty daha sonra size hen√ºz a√ßƒ±k olmayan diƒüer kapƒ±yƒ± se√ßme veya ilk kapƒ±da "
             "kalma se√ßeneƒüi sunuyor.Cevabƒ±nƒ±zƒ± diƒüer kapƒ±ya √ßevirmek sizin lehinize mi? Olasƒ±lƒ±k √∂yle olduƒüunu "
             "s√∂yl√ºyor!")
if selected == "ƒ∞leti≈üim":
    st.title(f"You have selected {selected}")
